name: 'Build and Deploy to GCS'

on:
  push:
    branches:
      - main
    paths:
      - 'public/**'
      - 'src/**'
      - components.json
      - next.config.js
      - package.json
      - package-lock.json
      - postcss.config.mjs
      - tailwind.config.ts
      - tsconfig.json

concurrency:
  group: 'prod-site-build'
  cancel-in-progress: true

env:
  PROJECT_ID: 'electric-node-426223-s2'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        id: checkout
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332'

      - name: Setup Node.js
        id: setup-node
        uses: 'actions/setup-node@v4'
        with:
          node-version: '18'
          cache: 'npm'

      - uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install Dependencies
        id: install-deps
        run: npm ci

      - name: 'Authenticate to Google Cloud'
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/276123986162/locations/global/workloadIdentityPools/default-pool/providers/default-provider'
          service_account: "build-service@electric-node-426223-s2.iam.gserviceaccount.com"

      - name: Compile Site by pulling content from API and building static html files
        id: compile-site
        run: npm run build
        env:
          NEXT_ADMIN_STRAPI_URL: 'https://admin.dentistswhoinvest.com/api'
          STRAPI_API_KEY: ${{ secrets.STRAPI_API_KEY }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: 'Deploy to GCS bucket'
        id: deploy-to-gcs
        run: |-
          gsutil -m rsync -r -d ./out/ gs://dwi-dotcom-static-assets
          gsutil -m rsync -r -d ./public/ gs://dwi-dotcom-static-assets/public/
