steps:
  - id: &install install-deps
    name: &npm gcr.io/cloud-builders/npm
    args:
      - ci

  - id: &build build-site
    name: *npm
    waitFor:
      - *install
    secretEnv:
      - STRAPI_API_KEY
    env:
      - 'NEXT_ADMIN_STRAPI_URL=https://admin.dentistswhoinvest.com/api'
    args: ['run', 'build']

  - id: &empty_dir create-empty-directory
    name: &gcloud gcr.io/google.com/cloudsdktool/cloud-sdk # odd to use this to run bash, but this downloads the image first. Next step timing is then realistic for how long the job took, not how long to download the image
    waitFor: ['-']
    entrypoint: bash
    args:
      - -c
      - mkdir -p ./empty

  - id: cancel-older-builds
    name: *gcloud
    waitFor:
      - *empty_dir
    entrypoint: bash
    args:
      - -c
      - |
        #!/bin/bash
        set -euo pipefail

        echo "Installing jq..."
        apt-get update -qq && apt-get install -y -qq jq

        WORKFLOW="${_WORKFLOW_STAGE}"
        echo "Finding all running/queued builds for workflow: ${_WORKFLOW_STAGE}"

        builds=$(gcloud builds list \
          --region=europe-west1 \
          --ongoing \
          --filter="substitutions._WORKFLOW_STAGE=${_WORKFLOW_STAGE}" \
          --format="json")

        latest_build_id=$(echo "$builds" | jq -r 'sort_by(.createTime) | last(.[]).id')
        echo "Latest build ID: $latest_build_id"

        echo "$builds" | jq -r '.[] | select(.id != "'$latest_build_id'") | .id' | while read -r build_id; do
          echo "Cancelling build $build_id"
          gcloud builds cancel "$build_id" || echo "Failed to cancel build $build_id"
        done

  - id: &empty_bucket empty-staging-bucket
    name: *gcloud
    waitFor:
      - *empty_dir
    entrypoint: gcloud
    args: &empty_bucket_args
      - storage
      - rsync
      - ./empty/
      - gs://${_BUCKET}-staging
      - --recursive
      - --delete-unmatched-destination-objects

  - id: upload-html-files
    name: *gcloud
    waitFor:
      - *build
      - *empty_bucket
    entrypoint: gcloud
    args:
      - storage
      - rsync
      - ./out/
      - gs://${_BUCKET}-staging
      - --content-type=text/html
      - --exclude='.+\..*'
      - --recursive

  - id: upload-rest-of-site
    name: *gcloud
    entrypoint: gcloud
    args:
      - storage
      - rsync
      - ./out/
      - gs://${_BUCKET}-staging
      - --recursive

  - id: upload-public-assets
    name: *gcloud
    entrypoint: gcloud
    args:
      - storage
      - rsync
      - ./public/
      - gs://${_BUCKET}-staging/public/
      - --recursive

  - id: publish-to-prod-bucket
    name: *gcloud
    entrypoint: gcloud
    args:
      - storage
      - rsync
      - gs://${_BUCKET}-staging/
      - gs://${_BUCKET}/
      - --recursive
      - --delete-unmatched-destination-objects

  - id: empty-staging-bucket-again
    name: *gcloud
    entrypoint: gcloud
    args: *empty_bucket_args

options:
  logging: CLOUD_LOGGING_ONLY

# injected for each trigger, either dwi-dotcom-beta-static-assets or dwi-dotcom-static-assets
# substitutions:

availableSecrets:
  secretManager:
    - versionName: projects/276123986162/secrets/STRAPI_TOKEN/versions/latest
      env: STRAPI_API_KEY
